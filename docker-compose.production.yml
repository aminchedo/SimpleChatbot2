version: '3.8'

networks:
  persian-chatbot:
    driver: bridge

volumes:
  backend_logs:
  backend_data:

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: production
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - SECRET_KEY=${SECRET_KEY:-change-this-in-production}
      - ALLOWED_ORIGINS=["https://${FRONTEND_DOMAIN:-your-domain.com}"]
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - HUGGING_FACE_API_KEY=${HUGGING_FACE_API_KEY:-}
      - MAX_AUDIO_SIZE_MB=10
      - MAX_REQUESTS_PER_MINUTE=60
      - MAX_WEBSOCKET_CONNECTIONS=100
      - LOG_LEVEL=INFO
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - backend_logs:/app/logs
      - backend_data:/app/data
    networks:
      - persian-chatbot
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /app/logs

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://${API_DOMAIN:-api.your-domain.com}
      - NEXT_PUBLIC_WS_URL=wss://${API_DOMAIN:-api.your-domain.com}
      - NEXT_PUBLIC_APP_NAME=Persian AI Chatbot
      - NEXT_PUBLIC_APP_VERSION=1.0.0
      - NEXT_PUBLIC_ENABLE_VOICE_CHAT=true
      - NEXT_PUBLIC_ENABLE_TEXT_CHAT=true
      - NEXT_PUBLIC_ENABLE_ANALYTICS=${ENABLE_ANALYTICS:-false}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    networks:
      - persian-chatbot
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true

  nginx:
    image: nginx:alpine
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - persian-chatbot
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true

  # Redis for session storage and caching (optional)
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-default-password}
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - persian-chatbot
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true

volumes:
  redis_data: